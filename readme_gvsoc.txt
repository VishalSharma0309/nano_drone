// https://github.com/VishalSharma0309/nano_drone
// Operating System: Ubuntu 18.04
// last updated: May 25, 2020


GVSOC Highlights:
	* functionally equivalent to the real chip
	* compiled code that can run on the chip will also run as it is on simulator

1. Setting up the GVSOC Virtual Platform

	cd ~/gap_sdk
	make gvsoc

2. Sourcing the device to be simulated

	example:
	cd ~/gap_sdk
	source configs/gapuino_v2.sh
	
3. cd to the program you want to compile
	
	example:
	cd ~/gap_sdk/examples/pmsis/test_features/cluster_fork/

4. Compiling 

	make all run platform=gvsoc

5. Compiling and activating VCD traces

	// VCD traces is used to see what happens on the chip
	make all run platform=gvsoc runner_args="--vcd"

	// This command produces a Gtkwave script which can be opened using a command described in the command result

5. Starting gtkwave with the trace

	// run the command generated by running command in (5)
	example:
	gtkwave /home/vishal/gap_sdk/examples/pmsis/test_features/cluster_fork/BUILD/GAP8_V2/GCC_RISCV/view.gtkw

	// this command initiates a graphical interface which can be used to understand the happening inside the chip


